/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                                                                 &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E         &kp R         &kp T   &kp GRAVE                                   &kp BSLH           &kp Y   &kp U   &kp I      &kp O     &kp P     &kp EQUAL
&none      &kp A   &kp S   &kp D         &kp F         &kp G   &kp LEFT_BRACKET                            &kp RIGHT_BRACKET  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C         &kp V         &kp B   &none             &none            &none    &none              &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL  &mo 1   &mo 2   &kp LEFT_ALT  &kp LEFT_GUI          &kp SPACE         &kp BACKSPACE    &kp RET  &kp SPACE                  &mo 2   &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans                                            &trans           &trans  &trans  &trans  &trans       &kp C_VOLUME_UP
&none   &kp N1        &kp N2        &kp N3        &kp N4        &kp N5     &bt BT_CLR                     &trans  &kp N6           &kp N7  &kp N8  &kp N9  &kp N0       &kp C_VOLUME_DOWN
&trans  &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT      &kp BSLH   &trans                         &trans  &kp KP_MULTIPLY  &kp N4  &kp N5  &kp N6  &kp KP_PLUS  &kp KP_MINUS
&trans  &kp ESC       &kp LGUI      &kp LG(C)     &kp LG(V)     &kp GRAVE  &trans      &trans     &trans  &trans  &kp KP_DIVIDE    &kp N1  &kp N2  &kp N3  &kp RET      &kp RET
&trans  &trans        &trans        &trans        &trans                   &trans      &kp DEL    &trans  &kp N0                   &mo 3   &trans  &trans  &trans       &trans
            >;
        };

        raise_layer {
            bindings = <
&kp F1   &kp F2     &kp F3    &kp F4    &kp F5    &kp F6                                       &kp F7      &kp F8        &kp F9        &kp F10           &kp F11    &kp F12
&kp ESC  &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &trans                    &trans  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &trans     &trans
&trans   &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE   &trans                    &trans  &kp HOME    &kp PG_UP     &kp PSCRN     &kp UP            &kp GRAVE  &kp TILDE
&trans   &kp ESC    &kp LGUI  &kp LPAR  &kp RPAR  &kp TILDE  &trans  &trans    &trans  &trans  &kp END     &kp PG_DN     &kp LEFT      &kp DOWN          &kp RIGHT  &kp RET
&trans   &trans     &trans    &mo 3     &trans               &mo 3   &trans    &trans  &trans              &trans        &trans        &trans            &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
&kp F1  &kp F2      &kp F3        &kp F4        &kp F5            &kp F6                                                 &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&trans  &none       &none         &none         &none             &none   &bootloader                    &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_TOG
&trans  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &none   &sys_reset                     &bt BT_CLR_ALL  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6
&trans  &kp PSCRN   &kp PSCRN     &kp CLCK      &none             &none   &trans       &trans    &trans  &trans          &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&trans  &trans      &trans        &trans        &trans                    &trans       &trans    &trans  &trans                        &trans        &trans        &trans        &trans        &trans
            >;
        };
    };
};
